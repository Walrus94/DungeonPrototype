services:

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-agent-${ENV}
    restart: on-failure
    network_mode: host
    command:
      tunnel run dungeon-bot-${ENV}
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TOKEN_PROD}

  dungeon-prototype-app:
    image: dungeon-prototype-app:latest
    container_name: dungeon-prototype-app-${ENV}
    restart: on-failure
    network_mode: host
    build:
      context: .
    volumes:
      - ./logs:/logs
    ports:
      - ${BOT_WEBHOOK_PORT}:${BOT_WEBHOOK_PORT}
    environment:
      SPRING_ACTIVE_PROFILE: ${ENV}
      BOT_USERNAME: ${BOT_USERNAME}
      BOT_WEBHOOK_URL: ${BOT_WEBHOOK_URL}
      BOT_AUTH_TOKEN: ${BOT_AUTH_TOKEN}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      ITEM_NAMING_TOPIC: ${KAFKA_ITEM_NAMING_TOPIC}
      SPRING_DATA_MONGODB_PORT: ${MONGO_DB_PORT}
      SPRING_DATA_MONGODB_DATABASE: ${MONGO_DB_DATABASE_NAME}
      SPRING_DATA_MONGODB_USERNAME: ${MONGO_DB_USER}
      SPRING_DATA_MONGODB_PASSWORD: ${MONGO_DB_PASSWORD}

  huggingface-api:
    image: huggingface-api:latest
    container_name: huggingface-api-${ENV}
    restart: on-failure
    network_mode: host
    build:
      context: ./huggingface-api
    environment:
      HUGGINGFACE_MODEL_FILE: /app/model
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TOPIC_NAME: ${KAFKA_ITEM_NAMING_TOPIC}
      MONGO_DB_PORT: ${MONGO_DB_PORT}
      MONGO_DB_DATABASE: ${MONGO_DB_DATABASE_NAME}
      MONGO_DB_USERNAME: ${MONGO_DB_USER}
      MONGO_DB_PASSWORD: ${MONGO_DB_PASSWORD}
    volumes:
      - ./model:/app/model
