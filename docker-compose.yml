services:

  dungeon-prototype-app:
    image: dungeon-prototype-app:latest
    container_name: dungeon-prototype-app-${ENV}
    restart: unless-stopped
    network_mode: host
    build:
      context: .
    ports:
      - ${BOT_WEBHOOK_PORT}:${BOT_WEBHOOK_PORT}
    labels:
      environment: ${ENV}
      service: dungeon-prototype-app
    logging:
      driver: "json-file"
      options:
        labels: environment,service
    environment:
      JAVA_OPTIONS: ${JAVA_OPTIONS:-""}
      SPRING_ACTIVE_PROFILE: ${ENV}
      COMPOSE_PROJECT_NAME: ${ENV}
      BOT_USERNAME: ${BOT_USERNAME}
      BOT_WEBHOOK_URL: ${BOT_WEBHOOK_URL}
      BOT_AUTH_TOKEN: ${BOT_AUTH_TOKEN}
      BOT_WEBHOOK_PORT: ${BOT_WEBHOOK_PORT}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: localhost:${KAFKA_PORT}
      ITEM_NAMING_TOPIC: ${KAFKA_ITEM_NAMING_TOPIC}
      SPRING_DATA_MONGODB_PORT: ${MONGO_DB_PORT}
      SPRING_DATA_MONGODB_DATABASE: ${MONGO_DB_DATABASE_NAME}
      SPRING_DATA_MONGODB_USERNAME: ${MONGO_DB_USER}
      SPRING_DATA_MONGODB_PASSWORD: ${MONGO_DB_PASSWORD}

  huggingface-api:
    image: huggingface-api:latest
    container_name: huggingface-api-${ENV}
    restart: unless-stopped
    network_mode: host
    build:
      context: ./huggingface-api
    labels:
      environment: ${ENV}
      service: huggingface-api
    logging:
      driver: "json-file"
      options:
        labels: environment,service
    environment:
      HUGGINGFACE_MODEL_FILE: /app/model
      COMPOSE_PROJECT_NAME: ${ENV}
      KAFKA_BOOTSTRAP_SERVERS: localhost:${KAFKA_PORT}
      KAFKA_TOPIC_NAME: ${KAFKA_ITEM_NAMING_TOPIC}
      MONGO_DB_PORT: ${MONGO_DB_PORT}
      MONGO_DB_DATABASE: ${MONGO_DB_DATABASE_NAME}
      MONGO_DB_USERNAME: ${MONGO_DB_USER}
      MONGO_DB_PASSWORD: ${MONGO_DB_PASSWORD}
    volumes:
      - ./model:/app/model
