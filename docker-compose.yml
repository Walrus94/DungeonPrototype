services:

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-agent-${ENV}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    command: tunnel --config /etc/cloudflared/config-${ENV}.yml run dungeon-bot-${ENV}
    volumes:
      - ./cloudflared:/etc/cloudflared
    networks:
      - dungeon-net

  dungeon-prototype-app:
    image: dungeon-prototype-app:latest   # This is the name of the Docker image for your Spring Boot app
    container_name: dungeon-prototype-app_${ENV}
    env_file:
      - shared.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    build:
      context: .  # Build context is the project root where the Dockerfile is located
    depends_on:
      - kafka
      - mongo
      - huggingface-api
    ports:
      - target: ${BOT_WEBHOOK_PORT}
        published: ${BOT_WEBHOOK_PORT}
        protocol: tcp
        mode: host
      - target: ${REMOTE_DEBUG_PORT}
        published: ${REMOTE_DEBUG_PORT}
        protocol: tcp
        mode: host
    environment:
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:${REMOTE_DEBUG_PORT}
      SPRING_ACTIVE_PROFILE: ${ENV}
      BOT_USERNAME: ${BOT_USERNAME}
      BOT_WEBHOOK_URL: ${BOT_WEBHOOK_URL}
      BOT_AUTH_TOKEN: run/secrets/dungeon_bot_token_${ENV}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      ITEM_NAMING_TOPIC: ${KAFKA_ITEM_NAMING_TOPIC}
      SPRING_DATA_MONGODB_URI: ${MONGO_DB_URI}
      SPRING_DATA_MONGODB_DATABASE: ${MONGO_DB_DATABASE_NAME}
      SPRING_DATA_MONGODB_USERNAME: run/secrets/mongo_db_user
      SPRING_DATA_MONGODB_PASSWORD: run/secrets/mongo_db_password
    secrets:
      - dungeon_bot_token_${ENV}
      - mongo_db_user
      - mongo_db_password
    networks:
      - dungeon-net

  huggingface-api:
    image: huggingface-api:latest
    container_name: huggingface-api
    env_file:
      - shared.env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    build:
      context: ./huggingface-api
    depends_on:
      - kafka
      - mongo
    environment:
      HUGGINGFACE_MODEL_FILE: /app/model
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TOPIC_NAME: ${KAFKA_ITEM_NAMING_TOPIC}
      MONGO_DB_CONNECTION: ${MONGO_DB_URI}
      MONGO_DB_DATABASE: ${MONGO_DB_DATABASE_NAME}
      MONGO_DB_USERNAME: ${MONGO_DB_USERNAME}
      MONGO_DB_PASSWORD: ${MONGO_DB_PASSWORD}
    secrets:
      - mongo_db_user
      - mongo_db_password
    networks:
      - dungeon-net
    volumes:
      - ./model:/app/model

secrets:
  mongo_db_user:
    external: true
  mongo_db_password:
    external: true
  dungeon_bot_token_prod:
    external: true
  dungeon_bot_token_dev:
    external: true
  dungeon_bot_token_test:
    external: true

networks:
  dungeon-net:
    external: true
