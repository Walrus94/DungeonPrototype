name: Restart Shared Service

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Select branch to checkout"
        required: true
        type: choice
        options:
          # BEGIN BRANCH LIST
        - async-task-execution
        - develop
        - item-generation-refactoring
        - master
        - room-content-population
        - secure-test-environment
        - update-branch-list-12292818677
        - upgrade-gradle-dependencies
          # END BRANCH LIST
      services:
        description: "Select service to restart from docker-compose.shared.yml"
        required: true
        type: choice
        options:
          - loki
          - promtail
          - prometheus
          - grafana
          - mongodb-exporter
          - zookeeper
          - kafka
          - mongo
          - postgres

jobs:
  restart:
    runs-on: self-hosted
    environment:
      name: Restart
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0
          persist-credentials: false
          clean: false

      - name: Set required environment variables
        run: |
          echo "ENV=${{vars.ENV}}" >> .env
          echo "GRAFANA_USER=${{secrets.GRAFANA_USER}}" >> .env
          echo "GRAFANA_PASSWORD=${{secrets.GRAFANA_PASSWORD}}" >> .env
          echo "KAFKA_PORT=${{vars.KAFKA_PORT}}" >> .env
          echo "MONGO_DB_PORT=${{vars.MONGO_DB_PORT}}" >> .env
          echo "MONGO_DB_USER=${{ secrets.MONGO_DB_USER }}" >> .env
          echo "MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }}" >> .env

      - name: Restart selected shared service
        run: |
          IFS=',' read -ra SERVICES <<< "${{ github.event.inputs.services }}"
          for service in "${SERVICES[@]}"; do
            echo "Stopping $service ..."
            docker-compose -p shared -f docker-compose.shared.yml --env-file .env stop "$service"
            echo "Starting $service ..."
            docker-compose -p shared -f docker-compose.shared.yml --env-file .env up "$service" --build -d
          done

      - name: Clean up environment file
        run: rm -f .env

      - name: Remove unused containers and volumes
        run: |
          docker system prune -af &&
          docker volume prune -f

