name: Deploy to dev

on:
  push:
    branches: ["develop"]

jobs:
  build-and-run:
    runs-on: self-hosted
    environment: dev
    permissions:
      contents: read

    steps:
      - name: Update repository
        run : cd ${{vars.WORK_DIR}} &&
          git fetch origin develop &&
          git checkout &&
          git pull
      - name: Set environment variables
        run: |
          cd ${{vars.WORK_DIR}} &&
          echo "ENV=${{vars.ENV}}" >> .env
          echo "JAVA_OPTIONS=${{vars.JAVA_OPTIONS}}" >> .env
          echo "BOT_AUTH_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
          echo "BOT_USERNAME=${{vars.BOT_USERNAME}}" >> .env
          echo "BOT_WEBHOOK_PORT=${{vars.BOT_WEBHOOK_PORT}}" >> .env
          echo "BOT_WEBHOOK_URL=${{vars.BOT_WEBHOOK_URL}}" >> .env
          echo "CLOUDFLARE_TOKEN=${{secrets.CLOUDFLARE_TOKEN}}" >> .env
          echo "GRAFANA_USER=${{secrets.GRAFANA_USER}}" >> .env
          echo "GRAFANA_PASSWORD=${{secrets.GRAFANA_PASSWORD}}" >> .env
          echo "KAFKA_PORT=${{vars.KAFKA_PORT}}" >> .env
          echo "KAFKA_ITEM_NAMING_TOPIC=${{vars.KAFKA_ITEM_NAMING_TOPIC}}" >> .env
          echo "MONGO_DB_DATABASE_NAME=${{vars.MONGO_DB_DATABASE_NAME}}" >> .env
          echo "MONGO_DB_PORT=${{vars.MONGO_DB_PORT}}" >> .env
          echo "MONGO_DB_USER=${{ secrets.MONGO_DB_USER }}" >> .env
          echo "MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }}" >> .env
      - name: Create shared network
        run: |
          if [ ! "$(docker network ls | grep shared_net)" ]; then
            echo "Creating shared_net network ..."
            docker network create shared_net
          else
            echo "shared_net network exists."
          fi
      - name: Run Shared services
        run: cd ${{vars.WORK_DIR}} &&
          docker-compose -p shared -f docker-compose.shared.yml --env-file .env up --build -d
      - name: Create network
        run: |
          if [ ! "$(docker network ls | grep dev_net)" ]; then
            echo "Creating dev_net network ..."
            docker network create dev_net
          else
            echo "dev_net network exists."
          fi
      - name: Run Environment specific services
        run: cd ${{vars.WORK_DIR}} &&
          docker-compose -p dev --env-file .env up --build -d
      - name: Clean up environment file
        run: cd ${{vars.WORK_DIR}} && rm -f .env
      - name: Cleanup Docker Data
        run: docker system prune -af &&
          docker volume prune -f
      - name: Verify Cleanup
        run: docker system df
