plugins {
    id 'application'
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.3.4'
}

jacocoTestReport {
    reports {
        xml.required.set(true)
    }
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:3.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-aop:3.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.4.0'
    implementation 'org.telegram:telegrambots-spring-boot-starter:6.9.7.1'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    implementation 'org.springframework.kafka:spring-kafka:3.2.4'
    implementation 'org.apache.kafka:kafka-clients:3.8.0'

    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-rng-sampling:1.5'
    implementation 'org.apache.commons:commons-rng-simple:1.5'
    implementation 'io.gatling.uncommons.maths:uncommons-maths:1.2.3'

    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.5'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.14.1'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.3.2'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation platform('org.junit:junit-bom:5.9.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.3.2'
    testImplementation "org.testcontainers:testcontainers:1.20.1"
    testImplementation 'org.testcontainers:mongodb:1.20.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.1'
}

application {
    mainClass = 'org.dungeon.prototype.DungeonPrototypeApplication'
}

compileJava {
    options.compilerArgs << '-parameters'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty 'file.encoding', 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}